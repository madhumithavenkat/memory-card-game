{"ast":null,"code":"var _jsxFileName = \"/Users/maddy/Documents/Projects/React/memory-card-game/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardEmojis = [\"🍕\", \"🍔\", \"🍟\", \"🌮\", \"🍣\", \"🍩\", \"🍪\", \"🍎\"];\nfunction shuffle(array) {\n  return [...array, ...array].map(item => ({\n    ...item,\n    id: Math.random()\n  })).sort(() => Math.random() - 0.5);\n}\nexport default function App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [bestScore, setBestScore] = useState(() => {\n    return Number(localStorage.getItem(\"bestScore\")) || null;\n  });\n  const [showWin, setShowWin] = useState(false);\n  useEffect(() => {\n    const shuffled = shuffle(cardEmojis.map(emoji => ({\n      emoji\n    })));\n    setCards(shuffled);\n  }, []);\n  useEffect(() => {\n    if (flipped.length === 2) {\n      setMoves(m => m + 1);\n      const [first, second] = flipped;\n      if (cards[first].emoji === cards[second].emoji) {\n        setMatched(prev => [...prev, cards[first].emoji]);\n      }\n      setTimeout(() => setFlipped([]), 800);\n    }\n  }, [flipped, cards]);\n  useEffect(() => {\n    if (matched.length === cardEmojis.length) {\n      if (!bestScore || moves < bestScore) {\n        setBestScore(moves);\n        localStorage.setItem(\"bestScore\", moves);\n      }\n      setShowWin(true);\n      setTimeout(() => setShowWin(false), 3000);\n    }\n  }, [matched, moves]);\n  const handleClick = index => {\n    if (flipped.includes(index) || flipped.length === 2 || matched.includes(cards[index].emoji)) return;\n    setFlipped(prev => [...prev, index]);\n  };\n  const resetGame = () => {\n    const shuffled = shuffle(cardEmojis.map(emoji => ({\n      emoji\n    })));\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setMoves(0);\n    setShowWin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-2\",\n      children: \"\\uD83E\\uDDE0 Memory Card Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-700\",\n      children: [\"Moves: \", moves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), bestScore !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-green-700\",\n      children: [\"Best Score: \", bestScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), showWin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-2xl font-bold text-green-600 animate-bounce mb-4\",\n      children: \"\\uD83C\\uDF89 You won! Great memory!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-4\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        isFlipped: flipped.includes(index),\n        isMatched: matched.includes(card.emoji),\n        onClick: () => handleClick(index)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e3yL1bThRyuqTuf3xC4wjep1JrI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Card","jsxDEV","_jsxDEV","cardEmojis","shuffle","array","map","item","id","Math","random","sort","App","_s","cards","setCards","flipped","setFlipped","matched","setMatched","moves","setMoves","bestScore","setBestScore","Number","localStorage","getItem","showWin","setShowWin","shuffled","emoji","length","m","first","second","prev","setTimeout","setItem","handleClick","index","includes","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","card","isFlipped","isMatched","_c","$RefreshReg$"],"sources":["/Users/maddy/Documents/Projects/React/memory-card-game/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\n\nconst cardEmojis = [\"🍕\", \"🍔\", \"🍟\", \"🌮\", \"🍣\", \"🍩\", \"🍪\", \"🍎\"];\n\nfunction shuffle(array) {\n  return [...array, ...array]\n    .map((item) => ({ ...item, id: Math.random() }))\n    .sort(() => Math.random() - 0.5);\n}\n\nexport default function App() {\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [bestScore, setBestScore] = useState(() => {\n    return Number(localStorage.getItem(\"bestScore\")) || null;\n  });\n  const [showWin, setShowWin] = useState(false);\n\n  useEffect(() => {\n    const shuffled = shuffle(cardEmojis.map((emoji) => ({ emoji })));\n    setCards(shuffled);\n  }, []);\n\n  useEffect(() => {\n    if (flipped.length === 2) {\n      setMoves((m) => m + 1);\n      const [first, second] = flipped;\n      if (cards[first].emoji === cards[second].emoji) {\n        setMatched((prev) => [...prev, cards[first].emoji]);\n      }\n      setTimeout(() => setFlipped([]), 800);\n    }\n  }, [flipped, cards]);\n\n  useEffect(() => {\n    if (matched.length === cardEmojis.length) {\n      if (!bestScore || moves < bestScore) {\n        setBestScore(moves);\n        localStorage.setItem(\"bestScore\", moves);\n      }\n      setShowWin(true);\n      setTimeout(() => setShowWin(false), 3000);\n    }\n  }, [matched, moves]);\n\n  const handleClick = (index) => {\n    if (flipped.includes(index) || flipped.length === 2 || matched.includes(cards[index].emoji)) return;\n    setFlipped((prev) => [...prev, index]);\n  };\n\n  const resetGame = () => {\n    const shuffled = shuffle(cardEmojis.map((emoji) => ({ emoji })));\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setMoves(0);\n    setShowWin(false);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\">\n      <h1 className=\"text-3xl font-bold mb-2\">🧠 Memory Card Game</h1>\n      <div className=\"mb-2 text-gray-700\">Moves: {moves}</div>\n      {bestScore !== null && (\n        <div className=\"mb-2 text-green-700\">Best Score: {bestScore}</div>\n      )}\n      <button\n        className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n        onClick={resetGame}\n      >\n        Reset Game\n      </button>\n\n      {showWin && (\n        <div className=\"text-2xl font-bold text-green-600 animate-bounce mb-4\">\n          🎉 You won! Great memory!\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-4 gap-4\">\n        {cards.map((card, index) => (\n          <Card\n            key={card.id}\n            card={card}\n            isFlipped={flipped.includes(index)}\n            isMatched={matched.includes(card.emoji)}\n            onClick={() => handleClick(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAEnE,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtB,OAAO,CAAC,GAAGA,KAAK,EAAE,GAAGA,KAAK,CAAC,CACxBC,GAAG,CAAEC,IAAI,KAAM;IAAE,GAAGA,IAAI;IAAEC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC;EAAE,CAAC,CAAC,CAAC,CAC/CC,IAAI,CAAC,MAAMF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AACpC;AAEA,eAAe,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,MAAM;IAC/C,OAAO0B,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI;EAC1D,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAM8B,QAAQ,GAAGzB,OAAO,CAACD,UAAU,CAACG,GAAG,CAAEwB,KAAK,KAAM;MAAEA;IAAM,CAAC,CAAC,CAAC,CAAC;IAChEf,QAAQ,CAACc,QAAQ,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd,IAAIiB,OAAO,CAACe,MAAM,KAAK,CAAC,EAAE;MACxBV,QAAQ,CAAEW,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;MACtB,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC,GAAGlB,OAAO;MAC/B,IAAIF,KAAK,CAACmB,KAAK,CAAC,CAACH,KAAK,KAAKhB,KAAK,CAACoB,MAAM,CAAC,CAACJ,KAAK,EAAE;QAC9CX,UAAU,CAAEgB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAErB,KAAK,CAACmB,KAAK,CAAC,CAACH,KAAK,CAAC,CAAC;MACrD;MACAM,UAAU,CAAC,MAAMnB,UAAU,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IACvC;EACF,CAAC,EAAE,CAACD,OAAO,EAAEF,KAAK,CAAC,CAAC;EAEpBf,SAAS,CAAC,MAAM;IACd,IAAImB,OAAO,CAACa,MAAM,KAAK5B,UAAU,CAAC4B,MAAM,EAAE;MACxC,IAAI,CAACT,SAAS,IAAIF,KAAK,GAAGE,SAAS,EAAE;QACnCC,YAAY,CAACH,KAAK,CAAC;QACnBK,YAAY,CAACY,OAAO,CAAC,WAAW,EAAEjB,KAAK,CAAC;MAC1C;MACAQ,UAAU,CAAC,IAAI,CAAC;MAChBQ,UAAU,CAAC,MAAMR,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC3C;EACF,CAAC,EAAE,CAACV,OAAO,EAAEE,KAAK,CAAC,CAAC;EAEpB,MAAMkB,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIvB,OAAO,CAACwB,QAAQ,CAACD,KAAK,CAAC,IAAIvB,OAAO,CAACe,MAAM,KAAK,CAAC,IAAIb,OAAO,CAACsB,QAAQ,CAAC1B,KAAK,CAACyB,KAAK,CAAC,CAACT,KAAK,CAAC,EAAE;IAC7Fb,UAAU,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEI,KAAK,CAAC,CAAC;EACxC,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMZ,QAAQ,GAAGzB,OAAO,CAACD,UAAU,CAACG,GAAG,CAAEwB,KAAK,KAAM;MAAEA;IAAM,CAAC,CAAC,CAAC,CAAC;IAChEf,QAAQ,CAACc,QAAQ,CAAC;IAClBZ,UAAU,CAAC,EAAE,CAAC;IACdE,UAAU,CAAC,EAAE,CAAC;IACdE,QAAQ,CAAC,CAAC,CAAC;IACXO,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACE1B,OAAA;IAAKwC,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACrFzC,OAAA;MAAIwC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChE7C,OAAA;MAAKwC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,SAAO,EAACvB,KAAK;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACvDzB,SAAS,KAAK,IAAI,iBACjBpB,OAAA;MAAKwC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAAC,cAAY,EAACrB,SAAS;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAClE,eACD7C,OAAA;MACEwC,SAAS,EAAC,iEAAiE;MAC3EM,OAAO,EAAEP,SAAU;MAAAE,QAAA,EACpB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERpB,OAAO,iBACNzB,OAAA;MAAKwC,SAAS,EAAC,uDAAuD;MAAAC,QAAA,EAAC;IAEvE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eAED7C,OAAA;MAAKwC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpC7B,KAAK,CAACR,GAAG,CAAC,CAAC2C,IAAI,EAAEV,KAAK,kBACrBrC,OAAA,CAACF,IAAI;QAEHiD,IAAI,EAAEA,IAAK;QACXC,SAAS,EAAElC,OAAO,CAACwB,QAAQ,CAACD,KAAK,CAAE;QACnCY,SAAS,EAAEjC,OAAO,CAACsB,QAAQ,CAACS,IAAI,CAACnB,KAAK,CAAE;QACxCkB,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAACC,KAAK;MAAE,GAJ7BU,IAAI,CAACzC,EAAE;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CApFuBD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}