{"ast":null,"code":"import _objectSpread from\"/Users/maddy/Documents/Projects/React/memory-card-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from\"react\";import Card from\"./Card\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const cardEmojis=[\"🍕\",\"🍔\",\"🍟\",\"🌮\",\"🍣\",\"🍩\",\"🍪\",\"🍎\"];function shuffle(array){return[...array,...array].map(item=>_objectSpread(_objectSpread({},item),{},{id:Math.random()})).sort(()=>Math.random()-0.5);}export default function App(){const[cards,setCards]=useState([]);const[flipped,setFlipped]=useState([]);const[matched,setMatched]=useState([]);const[moves,setMoves]=useState(0);const[bestScore,setBestScore]=useState(()=>{return Number(localStorage.getItem(\"bestScore\"))||null;});const[showWin,setShowWin]=useState(false);useEffect(()=>{const shuffled=shuffle(cardEmojis.map(emoji=>({emoji})));setCards(shuffled);},[]);useEffect(()=>{if(flipped.length===2){setMoves(m=>m+1);const[first,second]=flipped;if(cards[first].emoji===cards[second].emoji){setMatched(prev=>[...prev,cards[first].emoji]);}setTimeout(()=>setFlipped([]),800);}},[flipped,cards]);useEffect(()=>{if(matched.length===cardEmojis.length){if(!bestScore||moves<bestScore){setBestScore(moves);localStorage.setItem(\"bestScore\",moves);}setShowWin(true);setTimeout(()=>setShowWin(false),3000);}},[matched,moves]);const handleClick=index=>{if(flipped.includes(index)||flipped.length===2||matched.includes(cards[index].emoji))return;setFlipped(prev=>[...prev,index]);};const resetGame=()=>{const shuffled=shuffle(cardEmojis.map(emoji=>({emoji})));setCards(shuffled);setFlipped([]);setMatched([]);setMoves(0);setShowWin(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-2\",children:\"\\uD83E\\uDDE0 Memory Card Game\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 text-gray-700\",children:[\"Moves: \",moves]}),bestScore!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 text-green-700\",children:[\"Best Score: \",bestScore]}),/*#__PURE__*/_jsx(\"button\",{className:\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",onClick:resetGame,children:\"Reset Game\"}),showWin&&/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600 animate-bounce mb-4\",children:\"\\uD83C\\uDF89 You won! Great memory!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-4 gap-4\",children:cards.map((card,index)=>/*#__PURE__*/_jsx(Card,{card:card,isFlipped:flipped.includes(index),isMatched:matched.includes(card.emoji),onClick:()=>handleClick(index)},card.id))})]});}","map":{"version":3,"names":["useState","useEffect","Card","jsx","_jsx","jsxs","_jsxs","cardEmojis","shuffle","array","map","item","_objectSpread","id","Math","random","sort","App","cards","setCards","flipped","setFlipped","matched","setMatched","moves","setMoves","bestScore","setBestScore","Number","localStorage","getItem","showWin","setShowWin","shuffled","emoji","length","m","first","second","prev","setTimeout","setItem","handleClick","index","includes","resetGame","className","children","onClick","card","isFlipped","isMatched"],"sources":["/Users/maddy/Documents/Projects/React/memory-card-game/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\n\nconst cardEmojis = [\"🍕\", \"🍔\", \"🍟\", \"🌮\", \"🍣\", \"🍩\", \"🍪\", \"🍎\"];\n\nfunction shuffle(array) {\n  return [...array, ...array]\n    .map((item) => ({ ...item, id: Math.random() }))\n    .sort(() => Math.random() - 0.5);\n}\n\nexport default function App() {\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [bestScore, setBestScore] = useState(() => {\n    return Number(localStorage.getItem(\"bestScore\")) || null;\n  });\n  const [showWin, setShowWin] = useState(false);\n\n  useEffect(() => {\n    const shuffled = shuffle(cardEmojis.map((emoji) => ({ emoji })));\n    setCards(shuffled);\n  }, []);\n\n  useEffect(() => {\n    if (flipped.length === 2) {\n      setMoves((m) => m + 1);\n      const [first, second] = flipped;\n      if (cards[first].emoji === cards[second].emoji) {\n        setMatched((prev) => [...prev, cards[first].emoji]);\n      }\n      setTimeout(() => setFlipped([]), 800);\n    }\n  }, [flipped, cards]);\n\n  useEffect(() => {\n    if (matched.length === cardEmojis.length) {\n      if (!bestScore || moves < bestScore) {\n        setBestScore(moves);\n        localStorage.setItem(\"bestScore\", moves);\n      }\n      setShowWin(true);\n      setTimeout(() => setShowWin(false), 3000);\n    }\n  }, [matched, moves]);\n\n  const handleClick = (index) => {\n    if (flipped.includes(index) || flipped.length === 2 || matched.includes(cards[index].emoji)) return;\n    setFlipped((prev) => [...prev, index]);\n  };\n\n  const resetGame = () => {\n    const shuffled = shuffle(cardEmojis.map((emoji) => ({ emoji })));\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setMoves(0);\n    setShowWin(false);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\">\n      <h1 className=\"text-3xl font-bold mb-2\">🧠 Memory Card Game</h1>\n      <div className=\"mb-2 text-gray-700\">Moves: {moves}</div>\n      {bestScore !== null && (\n        <div className=\"mb-2 text-green-700\">Best Score: {bestScore}</div>\n      )}\n      <button\n        className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n        onClick={resetGame}\n      >\n        Reset Game\n      </button>\n\n      {showWin && (\n        <div className=\"text-2xl font-bold text-green-600 animate-bounce mb-4\">\n          🎉 You won! Great memory!\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-4 gap-4\">\n        {cards.map((card, index) => (\n          <Card\n            key={card.id}\n            card={card}\n            isFlipped={flipped.includes(index)}\n            isMatched={matched.includes(card.emoji)}\n            onClick={() => handleClick(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"2IAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAG,CAAC,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CAEnE,QAAS,CAAAC,OAAOA,CAACC,KAAK,CAAE,CACtB,MAAO,CAAC,GAAGA,KAAK,CAAE,GAAGA,KAAK,CAAC,CACxBC,GAAG,CAAEC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,MAAEE,EAAE,CAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAG,CAAC,CAC/CC,IAAI,CAAC,IAAMF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CACpC,CAEA,cAAe,SAAS,CAAAE,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACwB,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAC0B,SAAS,CAAEC,YAAY,CAAC,CAAG3B,QAAQ,CAAC,IAAM,CAC/C,MAAO,CAAA4B,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAI,IAAI,CAC1D,CAAC,CAAC,CACF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGhC,QAAQ,CAAC,KAAK,CAAC,CAE7CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgC,QAAQ,CAAGzB,OAAO,CAACD,UAAU,CAACG,GAAG,CAAEwB,KAAK,GAAM,CAAEA,KAAM,CAAC,CAAC,CAAC,CAAC,CAChEf,QAAQ,CAACc,QAAQ,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAENhC,SAAS,CAAC,IAAM,CACd,GAAImB,OAAO,CAACe,MAAM,GAAK,CAAC,CAAE,CACxBV,QAAQ,CAAEW,CAAC,EAAKA,CAAC,CAAG,CAAC,CAAC,CACtB,KAAM,CAACC,KAAK,CAAEC,MAAM,CAAC,CAAGlB,OAAO,CAC/B,GAAIF,KAAK,CAACmB,KAAK,CAAC,CAACH,KAAK,GAAKhB,KAAK,CAACoB,MAAM,CAAC,CAACJ,KAAK,CAAE,CAC9CX,UAAU,CAAEgB,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAErB,KAAK,CAACmB,KAAK,CAAC,CAACH,KAAK,CAAC,CAAC,CACrD,CACAM,UAAU,CAAC,IAAMnB,UAAU,CAAC,EAAE,CAAC,CAAE,GAAG,CAAC,CACvC,CACF,CAAC,CAAE,CAACD,OAAO,CAAEF,KAAK,CAAC,CAAC,CAEpBjB,SAAS,CAAC,IAAM,CACd,GAAIqB,OAAO,CAACa,MAAM,GAAK5B,UAAU,CAAC4B,MAAM,CAAE,CACxC,GAAI,CAACT,SAAS,EAAIF,KAAK,CAAGE,SAAS,CAAE,CACnCC,YAAY,CAACH,KAAK,CAAC,CACnBK,YAAY,CAACY,OAAO,CAAC,WAAW,CAAEjB,KAAK,CAAC,CAC1C,CACAQ,UAAU,CAAC,IAAI,CAAC,CAChBQ,UAAU,CAAC,IAAMR,UAAU,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAC3C,CACF,CAAC,CAAE,CAACV,OAAO,CAAEE,KAAK,CAAC,CAAC,CAEpB,KAAM,CAAAkB,WAAW,CAAIC,KAAK,EAAK,CAC7B,GAAIvB,OAAO,CAACwB,QAAQ,CAACD,KAAK,CAAC,EAAIvB,OAAO,CAACe,MAAM,GAAK,CAAC,EAAIb,OAAO,CAACsB,QAAQ,CAAC1B,KAAK,CAACyB,KAAK,CAAC,CAACT,KAAK,CAAC,CAAE,OAC7Fb,UAAU,CAAEkB,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAEI,KAAK,CAAC,CAAC,CACxC,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAZ,QAAQ,CAAGzB,OAAO,CAACD,UAAU,CAACG,GAAG,CAAEwB,KAAK,GAAM,CAAEA,KAAM,CAAC,CAAC,CAAC,CAAC,CAChEf,QAAQ,CAACc,QAAQ,CAAC,CAClBZ,UAAU,CAAC,EAAE,CAAC,CACdE,UAAU,CAAC,EAAE,CAAC,CACdE,QAAQ,CAAC,CAAC,CAAC,CACXO,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,mBACE1B,KAAA,QAAKwC,SAAS,CAAC,wEAAwE,CAAAC,QAAA,eACrF3C,IAAA,OAAI0C,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,+BAAmB,CAAI,CAAC,cAChEzC,KAAA,QAAKwC,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAAC,SAAO,CAACvB,KAAK,EAAM,CAAC,CACvDE,SAAS,GAAK,IAAI,eACjBpB,KAAA,QAAKwC,SAAS,CAAC,qBAAqB,CAAAC,QAAA,EAAC,cAAY,CAACrB,SAAS,EAAM,CAClE,cACDtB,IAAA,WACE0C,SAAS,CAAC,iEAAiE,CAC3EE,OAAO,CAAEH,SAAU,CAAAE,QAAA,CACpB,YAED,CAAQ,CAAC,CAERhB,OAAO,eACN3B,IAAA,QAAK0C,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAAC,qCAEvE,CAAK,CACN,cAED3C,IAAA,QAAK0C,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CACpC7B,KAAK,CAACR,GAAG,CAAC,CAACuC,IAAI,CAAEN,KAAK,gBACrBvC,IAAA,CAACF,IAAI,EAEH+C,IAAI,CAAEA,IAAK,CACXC,SAAS,CAAE9B,OAAO,CAACwB,QAAQ,CAACD,KAAK,CAAE,CACnCQ,SAAS,CAAE7B,OAAO,CAACsB,QAAQ,CAACK,IAAI,CAACf,KAAK,CAAE,CACxCc,OAAO,CAAEA,CAAA,GAAMN,WAAW,CAACC,KAAK,CAAE,EAJ7BM,IAAI,CAACpC,EAKX,CACF,CAAC,CACC,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}